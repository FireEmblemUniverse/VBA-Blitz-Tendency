WeaponDebuffTable:
defWeaponDebuffs(0,0,0,0,0,0,0) //0x0: let 0-index entry be no debuffs.
defWeaponDebuffs(0,0,1,1,0,2,2) //0x1: Bronze Shuriken debuff.
defWeaponDebuffs(0,2,0,0,0,3,3) //0x2: Iron Shuriken debuff.
defWeaponDebuffs(3,0,0,0,0,4,4) //0x3: Steel Shuriken debuff.
defWeaponDebuffs(0,0,0,4,0,4,4) //0x4: Silver Shuriken debuff.
defWeaponDebuffs(4,0,0,4,0,4,4) //0x5: Pebble debuff.

ALIGN 4

// ######################################################################
//Relating to Tequila's slayer/effectiveness rework
//Used in the class editor and item editor tables
//To understand how this works, check out Engine Hacks/Skill System/Teq Skills/FE8-Nullify/_README.txt
#define ArmorType	0x01
#define HorseType	0x02
#define FlierType	0x04
#define DragonType	0x08
#define MonsterType	0x10
#define SwordType	0x20
#define MageType	0x40
#define FlyingType  FlierType
#define MagicType   MageType

//Change existing effective items (class weaknesses are already part of the class data table)
#define ItemEffectivenessPtr(item_id, label_to_point_to) "PUSH; ORG ItemTable + 0x24*item_id + 0x10; POIN label_to_point_to; POP"

ItemEffectivenessPtr(Rapier, LordWeaponEffectiveness)
ItemEffectivenessPtr(Armorslayer, ArmorEffectiveness)
ItemEffectivenessPtr(Wyrmslayer, DragonEffectiveness)
ItemEffectivenessPtr(Zanbato, HorseEffectiveness)
ItemEffectivenessPtr(Horseslayer, HorseEffectiveness)
ItemEffectivenessPtr(Halberd, HorseEffectiveness)
ItemEffectivenessPtr(Hammer, ArmorEffectiveness)
ItemEffectivenessPtr(Swordslayer, SwordEffectiveness)
ItemEffectivenessPtr(IronBow, FlierEffectiveness)
ItemEffectivenessPtr(SteelBow, FlierEffectiveness)
ItemEffectivenessPtr(SilverBow, FlierEffectiveness)
ItemEffectivenessPtr(PoisonBow, FlierEffectiveness)
ItemEffectivenessPtr(KillerBow, FlierEffectiveness)
ItemEffectivenessPtr(BraveBow, FlierEffectiveness)
ItemEffectivenessPtr(ShortBow, FlierEffectiveness)
ItemEffectivenessPtr(Longbow, FlierEffectiveness)
ItemEffectivenessPtr(Ballista, FlierEffectiveness)
ItemEffectivenessPtr(IronBallista, FlierEffectiveness)
ItemEffectivenessPtr(KillerBallista, FlierEffectiveness)
ItemEffectivenessPtr(Excalibur, SacredWeaponEffectiveness)
ItemEffectivenessPtr(Luce, SacredWeaponEffectiveness)
ItemEffectivenessPtr(DragonAxe, DragonEffectiveness)
ItemEffectivenessPtr(Reginleif, LordWeaponEffectiveness)
ItemEffectivenessPtr(ShadowKiller, MonsterEffectiveness)
ItemEffectivenessPtr(BrightLance, MonsterEffectiveness)
ItemEffectivenessPtr(Fiendcleaver, MonsterEffectiveness)
ItemEffectivenessPtr(BeaconBow, FlierAndMonster1)
ItemEffectivenessPtr(Sieglinde, SacredWeaponEffectiveness)
ItemEffectivenessPtr(Ivaldi, SacredWeaponEffectiveness)
ItemEffectivenessPtr(DragonSpear, DragonEffectiveness)
ItemEffectivenessPtr(Vidofnir, SacredWeaponEffectiveness)
ItemEffectivenessPtr(Audhulma, SacredWeaponEffectiveness)
ItemEffectivenessPtr(Siegmund, SacredWeaponEffectiveness)
ItemEffectivenessPtr(Garm, SacredWeaponEffectiveness)
ItemEffectivenessPtr(Nidhogg, FlierAndMonster2)
ItemEffectivenessPtr(HeavySpear, ArmorEffectiveness)
ItemEffectivenessPtr(WindSword, FlierEffectiveness)
ItemEffectivenessPtr(Dragonstone, MonsterEffectiveness)
ItemEffectivenessPtr(Aircalibur, FlierEffectiveness)
ItemEffectivenessPtr(PiercingBow, ArmorEffectiveness)
ItemEffectivenessPtr(HuntersBow, HorseEffectiveness)
ItemEffectivenessPtr(RunicBow, MageEffectiveness)
ItemEffectivenessPtr(AnimaCalibur, FlierEffectiveness)
ItemEffectivenessPtr(LightCalibur, FlyingMagicEffectiveness)
ItemEffectivenessPtr(SwordCalibur, ArmorFlyingMagicEffectiveness)
ItemEffectivenessPtr(BowCalibur, FlierEffectiveness)
ItemEffectivenessPtr(Dragonshard, MonsterEffectiveness)

//Protector item (macro still works, even if it's wrongly named)
ItemEffectivenessPtr(DelphiShield, FlierProtection)

#define SetWeaponEffectiveness(type_list, coefficient_times_2) "BYTE 0 coefficient_times_2; SHORT type_list"
LordWeaponEffectiveness:
SetWeaponEffectiveness(ArmorType|SwordType, 6)
WORD 0 //terminator
ArmorEffectiveness:
SetWeaponEffectiveness(ArmorType, 6)
WORD 0
HorseEffectiveness:
SetWeaponEffectiveness(HorseType, 6)
WORD 0
DragonEffectiveness:
SetWeaponEffectiveness(DragonType, 6)
WORD 0
FlierEffectiveness:
SetWeaponEffectiveness(FlierType, 6)
WORD 0
SwordEffectiveness:
SetWeaponEffectiveness(SwordType, 6)
WORD 0
MonsterEffectiveness:
SetWeaponEffectiveness(MonsterType, 6)
WORD 0
SacredWeaponEffectiveness:
SetWeaponEffectiveness(MonsterType, 4)
WORD 0
FlierAndMonster1: //Beacon bow
SetWeaponEffectiveness(FlierType|MonsterType, 6)
WORD 0
FlierAndMonster2: //Nidhogg
SetWeaponEffectiveness(FlierType, 6)
SetWeaponEffectiveness(MonsterType, 4)
WORD 0
ArmorFlyingMagicEffectiveness:
SetWeaponEffectiveness(ArmorType, 6)
FlyingMagicEffectiveness:
SetWeaponEffectiveness(FlyingType, 6)
MageEffectiveness:
SetWeaponEffectiveness(MagicType, 6)
WORD 0

#define SetProtection(type_list) "SHORT 0 type_list"
FlierProtection:
SetProtection(FlierType)


SwordCaliburBonuses:
BYTE 0 0 7 0 0 7 7
//0 HP, 0 str, 7 skl, 0 spd, 0 def, 7 res, 7 luk

HalfStoneBonuses:
BYTE 0 8 6 0 5 5 0
//0 HP, 8 str, 6 skl, 0 spd, 5 def, 5 res, 0 luk

ALIGN 4

//Dismount table
#define MountedUnmounted(classIDMounted, classIDUnmounted) "BYTE classIDMounted classIDUnmounted"
#define EndMountUnmountedTable "BYTE 0x00 0x00"

MountedClassTable:
//Replace this with a list of your classes, mounted and unmounted.
MountedUnmounted(VoidMaster, VoidMonster)
EndMountUnmountedTable


//Weapon Table
NewManaketeAnimSet: //C9 = Already transformed Morva-dragon
AddClassAnimation(0xC9, Dragonstone, 1)
AddClassAnimation(0xC9, Dragonstone, 0)
AddClassAnimation(0xC9, Dragonshard, 1)
AddClassAnimation(0xC9, Dragonshard, 0)
AddClassAnimation(0xC9, WretchedAir, 1)
AddClassAnimation(0xC9, WretchedAir, 0)
AddClassAnimation(0xC9, 9, 0) //unarmed
EndClassAnimation

SetClassAnimation(Manakete_2_F, NewManaketeAnimSet)
SetClassAnimation(Manakete_2, NewManaketeAnimSet)
SetClassAnimation(Manakete, NewManaketeAnimSet)

ALIGN 4
SuperBlitzStatBoosts:
//   hp st sk sp df rs lk mv cn
BYTE 00 10 10 00 10 20 00 00 00 00

ALIGN 4
BlitzOfAjaStatBoosts:
//   hp st sk sp df rs lk mv cn
BYTE 00 10 05 05 05 20 20 00 00 00

